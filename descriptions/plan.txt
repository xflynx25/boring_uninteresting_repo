## main driver function 
# Get Fixtures, current gw
# Update Odds
# Update Both Tables
# read from both tables, set last gameweek equal to current gameweek
# call processed team/player season, which automatically sets raw values from reading from database 
# rewrite opponent datacollect to search for opponents in the fixture_df 
# merge the two together
# df loc this gameweek and return

# apparently we have a problem with num transfers not updating on the server quick enough 
# so we cannot be making multiple transfers in a period of time
######### another problem we have is executing things like wildcard, or other chips,
###### we turn out to be not allowed to use anything synchronous im afraid in these async functions
############so we need to rewrite them when we want them to actually execute.
#### could also eventually have a problem with if we are printing our results, when there is a free transfer around line 115 on overseer


# need to fix representation of selected, check how we did it in database vs in accountant 
# i could go into oracle post processing functions and change expected points to 0 for players who are red 
#### this has sole process of helping you to transfer out a red player.

# HARDEST: Figure out how to use chips, how to save ft, take hits, when in week to run the program, how to deal with new players
# i think for this last one for now we will just not pick first week, then use 1gw model, then 3, until finally they are up to the 6 game
# and we don't pick new players or injured players



I can edit the processed df to make all ict and creativity values for gk 0


# 12/14/2020 #
- Ramsdale
- instead of rank as criterion for scoring the top transfers...use percentage of score of the number 1 guy
- - - because ranking is deceptive as we have kicked out many possible options
- when considering save transfer, look at next week predictions too, could see doesn't need to be done this week
- Position affects pricing & threat etc, but also how many points you get, how to represent
- Rid of blanks in database regression, also see if theres a problem besides lack of splits
- New way of representing... diff regressions for num_opponents just like with position? 
- Wildcard search is slow 
- wildcard not working 
- Transfer information & other things that change season to season should be ranked
- last 2 gwks as well as 136?
- Add Npts, points per minute, opponent_position_points, other quality features (see below)
*** games scored more than 5/10 over total gameweeks played (only once 6 games been played?)
- How to consider team value (maybe in context of automating week) --> could monitor team_player transfers
- bench risks like mahrez

## 12/20/2020 ## To-Do this week
Database/Model Cleanup:
^v^CHECK^*^  Transfer statistics changed to % of top player in the week 
^v^CHECK^*^ opponent_concessions
^v^CHECK^*^ only FIX1SALOC, turn PLAYER_DB to empty csv if want to recalculate everything (just go to dropbox & drag out to diff folder)
^v^CHECK^*^ Boolean Stats
^v^CHECK^*^ points per minute
^v^CHECK^*^ correct bad odds
^v^CHECK^*^ blanks & benched are removed from regression
^v^CHECK^*^ feature analysis & relevance threshold when training
^v^CHECK^*^ wrote 5 different models to avg between
^v^CHECK^*^ N1 minimum for transfer completion
^v^CHECK^*^ Use (1,2,3,6) in regression 
7) transfer market by using all models and averaging
CHECKKKK -- GO INTO ACCOUNTANT 2 HELPERS FOR SALOC COLUMNS IN OPPONENT JUST HAD IT CHANGED SO COULD PROCEED AS IF NORMAL

Strategy Improvement:
- ignore blank gw when planning double gw, automatically freehit it 
    If 6 games or less in a gw in next 6, go to fixtures and shift everything forward
    & remove the blank, in predictions we manually set all these predictions to be 0



DONE) Fix saloc in accountant 
DONE) Function to call and average models for the week, & structure overseer
2) Function to determine models for week, function of gw/rank?/rank_desire
    2.1) Create model for aggression / aggression (low ownership) in choose top transfer 
3) Determining Chips Function 
4) Write documentation 
    Using Models, Personalities --> view database description
    How you could add more features to database
DONE) More efficient search 
6) Pick starting team 
7) Consider price changes 
8) Automate when in week to transfer, same time every day run code decide_if_action_today
9) consider other players in your leagues teams 
DONE FIRST HALF) Allow user to specify players never to get (or teams never to get from)
11) Consider rotation for defenders and goalkeeper
12) retrain models predicting captaincy with crossval 4 times 
13) Mu zero version
14) initialize all folders and csv for beginning of year 
15) add a keepers no price
DONE ALTERNATIVELY) The way to make search_v2 faster is to calculate delta points at each step. So no recomputation. 
    Pass down sorted team players in list form by position, from which should easily be able to compute this. 
17-18) Make not same game captain, also make the bench points functions esp for free hit not just total bench pt
19) Way to not care about backup keeper when doing free hit 
20) CHIP MANAGEMENT: We can now use the chip tailoff method because we can calculate chip stuff every week.
    We set the chip greatness number to be somewhat significant in order to save for double/blank unless
    there will really be a good case for usage. 
    We can then look ahead in our fixtures list early on in overseer.
    If there is a blank/double coming up, we can see how many players we have for it, and 
    then have methods to adjust how we compute transfer market accordingly. If we have free hit and no 
    players than we can just ignore the week and play free hit that week. If we are doing well than just 
    keep as normal. If there is blank than double and we don't have free hit than as if doing wildcard,
    so we just start predicting for 5gw, then 4gw, 3gw etc. We can sense dgw coming up and if we see that
    we have many players doubling or scoring high for that gw (by running a make transfer market for N1 as if 
    that gw was next week) then we can prepare for a bench boost (maybe by raising the bench percentage). 
21) twitter parser that looks through sentiment involving that player to give them a rating of fan_love
    daniel seems to think this is a good indicator of how well they are playing
22) initialize all folders, or also an update and reset folders for if they add their own model 
23) rewrite overseer to use more methods and more modular and readable
24) Is it really saying keepers are better or is this because we ran the regression seperately.
    maybe do a check against mean scores predicted by individual testers - and scale appropriately
    because i guess the others could be being weighed down by the intermingling with other positions or smth.
25) For wildcard keep track of groups when we are at the 3 transfer pass, and then do a reset.. and make sure converge to the
    same exact way multiple times. This should be better than our just randomizer thing so far.
26) There are some edge case problems with transferring on the day of matches 
27) End of year it starts to take a long time to process the data, consider optimization. 
28) lower bound the -8 by more, or maybe penalize more. Or see if you can't even improve with one transfer, shouldn't be doing
a hit.
29) Triple gameweeks there finally was one in gw 35 of 2020-21 season, so need to account for that in make_team_metadata and
    other functions accordingly. 
30) Rewrite upcoming dgw model suite so that we can deal with the end of season, right now crashing because
    it assumes there will be a num_opponents_next6 stat but that doesn't get calculated when out of scope.
31) MAKE SURE WE TRAIN MODELS FOR THE END OF SEASON, the first time we only trained the next 1 and next 6
    -- temporarily solution: training with the 1 gw only models, so in oracle.py line 101 needs to be reverted
        forward = [6 if gw < 34 else 1][0]#39-gw][0]
32) something seriously wrong with the keepers, darlow injured and not getting benched also him and de gea not played in 8 games
    but still showing up on leaderboards
33) More features for motivation: Rank in table (so for close games, or irrelevant games), points
34) at some point we want to make the saving of gw predictions nicer probably, right now it saves the individual prediction,
    which is fine, but were not setting it to save each individually so it just saves the last into weekly scoreboard
35) for duplicate names, some way to elimanate your chosen one
36) Send requests to fplstatistics.co.uk & strip html for price changes, factor in to transfers. 
    If we decide on transfer and neither price is changing, then we store in csv and read that in every day & do a quick check 
    if either price will change or if any of them are injured, or if any of our players have been injured, in which case we recalculate.
37) Cap the api calls more tightly to avoid payments
38) 
    MIGHT WANT TO GO OVER THE ACCOUNTANT FUNCTIONS AND FIGURE OUT WHICH ONES 
    WE NEED TO UPDATE THE DATABASE ONES WITH. PERHAPS CLEAN IT UP AND MAKE A 
    LITTLE SHARED FILE FOR THE LOWER LEVEL ONES. 

In 1236-136-6 we have trouble dealing with 
those who do not play much, most likely because
we throw out people playing none in last 6 for db. 
Still not sure this makes sense though for why they should
Be predicted as the best , possibly gw 18 thing?

# In Morning
Do passive first with list empty and no mahrez removal
Then aggressive wildcard ignoring 18 and mahrez 0 points 
If full is done, can use that, otherwise, just use previous outfield models 
In future week, need to rewrite search or move up zero updates rn its 6

Just run on terminal, could probably start tonight see how goalkeepers are with firstborn




### IDEAS FOR ALPHA FPL B (deep learned season_play through) ####

Reward: Points in the week
Value: Discount 0
Policy: To be learned 
Dynamics: Randomness to be learned 

__worries__: 
    overfitting
    no health data 
    no pricing data
    how to allow to plan
    yes or no self-sim through dynamics 

But if we have the data to learn the patterns behind player scores, and not overfit
and if we can get a good model for Dynamics, then we are good. 

latent representation of players 200 --> 10
so 600 players x 10 features = 6000 player features 
meta features
fixtures 

--> deep network --> Value and Policy 
Policy is players to be transfered, and chips to be played (not triple captain)
Policy 2 is picking the team (includes player latent, and if chip played or not), returns yes or no tc



Chip Dict + Chip Tailoff & Chip Value 

other ideas? 